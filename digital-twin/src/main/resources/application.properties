spring.application.name=digital-twin

# Datasource: prefer environment-provided JDBC URL (for Docker/Postgres). Falls back to H2 file DB for local dev.
# spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:file:./data/readings}
# spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.url=jdbc:postgresql://localhost:5432/digitaltwindb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Optional override for driver; when using Postgres Docker the driver will normally be auto-detected.

# Let Spring Boot auto-detect the driver from the JDBC URL by default.
# If you need to force a driver, set SPRING_DATASOURCE_DRIVER environment variable.
# Example: SPRING_DATASOURCE_DRIVER=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update

# H2 console (kept enabled for local dev/debug)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JWT settings
jwt.secret=${JWT_SECRET:change-me-please}
jwt.expiration-ms=${JWT_EXPIRATION_MS:3600000}

# Notes:
# To enable Postgres via docker-compose, set SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/digitaltwindb
# and SPRING_DATASOURCE_USERNAME/SPRING_DATASOURCE_PASSWORD accordingly (see docker-compose.yml).